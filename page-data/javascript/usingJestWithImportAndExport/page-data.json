{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/usingJestWithImportAndExport/","result":{"data":{"site":{"siteMetadata":{"title":"Konnor's Blog","author":"Konnor Rogers"}},"markdownRemark":{"id":"d9e07bee-f6df-558b-bdcb-dc11edc7a7c2","excerpt":"Purpose When using new tools I like to create my own documentation of setup.\nIn this case we will be looking at: Jest Jest is a simple testing framework for…","html":"<h1>Purpose</h1>\n<p>When using new tools I like to create my own documentation of setup.<br>\nIn this case we will be looking at: <a href=\"https://jestjs.io\">Jest</a><br></p>\n<p>Jest is a simple testing framework for javascript that uses\nvery similar syntax to RSpec. In fact, it even supports the *.spec.js file extension.\nI however, like to use the *.test.js file, but you are free to do as you please.</p>\n<h2>Quick Start</h2>\n<p>At the time of writing this, I am using Jest 24.9, Babel 7.6, and ESLint 6.5</p>\n<p>ESLint is not necessary for this Jest to properly use the import / export syntax,\nhowever, I like it for using prettier within my work environment.</p>\n<h3>EDIT</h3>\n<p>I realized I never included the use of Webpack for bundling everything! I added the command below and my webpack config</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"88264738755512000000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`# If its a new project\nnpm init\n\n# install eslint, jest, and babel packages\nnpm install --save-dev webpack webpack-cli webpack-dev-server jest babel-jest babel-loader @babel/core @babel/preset-env regenerator-runtime eslint eslint-plugin-jest\n\n# create a config file for jest and eslint\nnpx jest --init\nnpx eslint --init`, `88264738755512000000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># If its a new project</span>\n<span class=\"token function\">npm</span> init\n\n<span class=\"token comment\"># install eslint, jest, and babel packages</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev webpack webpack-cli webpack-dev-server jest babel-jest babel-loader @babel/core @babel/preset-env regenerator-runtime eslint eslint-plugin-jest\n\n<span class=\"token comment\"># create a config file for jest and eslint</span>\nnpx jest --init\nnpx eslint --init</code></pre></div>\n<p>Then modify eslint and jest config files accordingly.</p>\n<p><a href=\"https://github.com/ParamagicDev/TicTacToeJS/blob/master/webpack.config.js\">My webpack config</a>\nRefer to webpack documentation for further instruction. I also have a previous writeup.\n<a href=\"https://paramagicdev.github.io/my-blog/javascript/webpackDevServerLiveReloading/\">https://paramagicdev.github.io/my-blog/javascript/webpackDevServerLiveReloading/</a></p>\n<p><a href=\"https://github.com/ParamagicDev/TicTacToeJS/blob/master/jest.config.js\">My Jest Config</a>\nI just use the default from <code class=\"language-text\">npx jest --init</code></p>\n<p><a href=\"https://github.com/ParamagicDev/TicTacToeJS/blob/master/.eslintrc.js\">My ESLint Config</a></p>\n<p>I simply used the default from <code class=\"language-text\">npx eslint --init</code> and chose the appropriate options for the project.\nI added the following lines for use with Jest.</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"86990277692622600000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`module.exports = {\n  // ...\n  env: {\n    &quot;jest/globals&quot;: true,\n  },\n  extends: [&quot;plugins:jest/recommended&quot;, &quot;eslint:recommended&quot;],\n  plugins: [&quot;jest&quot;],\n  // ...\n}`, `86990277692622600000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  env<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"jest/globals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"plugins:jest/recommended\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"jest\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://github.com/ParamagicDev/TicTacToeJS/blob/master/babel.config.js\">My Babel Config</a>\nThere appears to be no <code class=\"language-text\">npx babel --init</code> so you must generate your own config file.\nI generated my using the <a href=\"https://jestjs.io/docs/en/getting-started#using-babel\">Docs</a>\nand it worked right out of the box.</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"35577063246234290000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// babel.config.js\nmodule.exports = {\n  presets: [\n    [\n      &quot;@babel/preset-env&quot;,\n      {\n        targets: {\n          node: &quot;current&quot;,\n        },\n      },\n    ],\n  ],\n}`, `35577063246234290000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// babel.config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          node<span class=\"token operator\">:</span> <span class=\"token string\">\"current\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, all your tests will go into a <code class=\"language-text\">__tests__/</code> directory and you can name them\n<code class=\"language-text\">*.test.js</code> and you’re ready to rock and roll.</p>\n<h2>The longer, more in depth guide</h2>\n<p>As with all projects using javascript, start with creating your package.json.<br></p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"1683860517287838500\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`npm init`, `1683860517287838500`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init</code></pre></div>\n<p>After filling in the appropriate fields, you will have a package.json and package-lock.json\nready to go. Alternatively you can use yarn, and I actually prefer yarn for many reasons\nthat I will not get into in this guide.</p>\n<h3>Installing Jest</h3>\n<p><a href=\"https://jestjs.io/docs/en/22.x/getting-started.html\">Jest Getting Started</a><br></p>\n<p>Jest’s documentation is quite good. And I quite enjoyed reading it, I recommend you check it out<br></p>\n<p>To start run the following:</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"45064904293355080000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`npm install --save-dev jest`, `45064904293355080000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev jest</code></pre></div>\n<p>That’s it! You’re done! Technically this is all you need to run Jest. However,\nif you’re using a non-Node based project IE: browser based project using ES6 imports,\nJest will quickly get in the way.</p>\n<p>Also, as a quick note, if you go into your jest config, the file it searches for tests\nis the <code class=\"language-text\">__tests__</code> directory. The getting started pages doesn’t mention this, but\nif you’re like me, you like to use a seperate tests directory.</p>\n<h3>Installing Babel</h3>\n<p>Jest uses the Node syntax of <code class=\"language-text\">module.exports = &lt;variable&gt;</code> and <code class=\"language-text\">require(&#39;&lt;file&gt;&#39;)</code>,\nit will not support the <code class=\"language-text\">import</code> and <code class=\"language-text\">export</code> statements of ES6.</p>\n<p>Luckily, people way smarter than me already thought of this,\nso there is a babel transpiler for this.</p>\n<p>To use this transpiler, you can install the following for use with Jest.</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"364166966707490940\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`npm install --save-dev babel-jest @babel/core @babel/preset-env regenerator-runtime`, `364166966707490940`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev babel-jest @babel/core @babel/preset-env regenerator-runtime</code></pre></div>\n<p><code class=\"language-text\">babel-jest</code>, <code class=\"language-text\">@babel/core</code>, <code class=\"language-text\">@babel/preset-env</code> are technically the only required\npackages. <code class=\"language-text\">regenerator-runtime</code> according to the documentation is not needed with\nNPM versions > 3/4 or Yarn. However, I included it just in case someone is using\na different package manager.</p>\n<h4>Adding a babel config</h4>\n<p>The next step is to add a Babel config.</p>\n<p><a href=\"https://github.com/ParamagicDev/TicTacToeJS/blob/master/babel.config.js\">My Babel Config</a>\nThere appears to be no <code class=\"language-text\">npx babel --init</code> so you must generate your own config file.\nI generated my using the <a href=\"https://jestjs.io/docs/en/getting-started#using-babel\">Docs</a>\nand it worked right out of the box.</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"43795109692354050000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// babel.config.js\nmodule.exports = {\n  presets: [\n    [\n      &quot;@babel/preset-env&quot;,\n      {\n        targets: {\n          node: &quot;current&quot;,\n        },\n      },\n    ],\n  ],\n}`, `43795109692354050000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// babel.config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          node<span class=\"token operator\">:</span> <span class=\"token string\">\"current\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After adding this to the root of your project, you should be ready to start using\nimport / export statements wherever you want!</p>\n<h4>Ok, so how does this all work?</h4>\n<p>Well, based on what I have read it’s super simple.\nLet’s take what the documentation uses.\nGiven the following file:</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"74143645733230200000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// src/sum.js\nexport default function sum(a, b) {\n  return a + b\n}`, `74143645733230200000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// src/sum.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"14399172642234292000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// __tests__/sum.test.js\n\nimport sum from &quot;../src/sum.js&quot;\n\ntest(&quot;adds 1 + 2 to equal 3&quot;, () => {\n  expect(sum(1, 2)).toBe(3)\n})`, `14399172642234292000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// __tests__/sum.test.js</span>\n\n<span class=\"token keyword\">import</span> sum <span class=\"token keyword\">from</span> <span class=\"token string\">\"../src/sum.js\"</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"adds 1 + 2 to equal 3\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>So why does this work?</p>\n<p>Well, Babel essentially takes your import statement: <br>\n<code class=\"language-text\">import sum from &quot;../src/sum.js&quot;;</code> <br>\nAnd turns it into<br>\n<code class=\"language-text\">const sum = require(&#39;../src/sum.js&#39;);</code></p>\n<p>And takes your export statement: <br>\n<code class=\"language-text\">export default function sum(a, b) {</code><br>\nand turns it into<br></p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"96316475318129920000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`function sum(a, b) {\n...code omitted for brevity\n}\nmodule.exports = sum`, `96316475318129920000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">...</span>code omitted <span class=\"token keyword\">for</span> brevity\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> sum</code></pre></div>\n<p>There are key differences when looking at import / export vs module.exports / require\nif you dig further and look at the specs. I won’t get into the differences here, but\nthere is a reason import / export statements are currently only experimental in NodeJS.</p>\n<p>Technically, you could stop here, but I like to use ESLint to both lint and enforce code style.\nIf you don’t tell ESLint about Jest, it will throw up many warnings. So, lets fix that.</p>\n<h3>Installing ESLint</h3>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"90382669517957090000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`npm install --save-dev eslint eslint-plugin-jest\nnpx eslint --init`, `90382669517957090000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev eslint eslint-plugin-jest\nnpx eslint --init</code></pre></div>\n<p>This will generate a eslint config file for you once you choose from the command line\noptions.</p>\n<p><a href=\"https://github.com/ParamagicDev/TicTacToeJS/blob/master/.eslintrc.js\">My ESLint Config</a></p>\n<p>I added the following lines for use with Jest in my <code class=\"language-text\">.eslintrc.js</code> file.</p>\n<div\n              class=\"gatsby-code-button-container customButtonContainerClass\"\n              data-toaster-id=\"15411397626496436000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied to clipboard!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`module.exports = {\n  // ...\n  env: {\n    &quot;jest/globals&quot;: true,\n  },\n  extends: [&quot;plugins:jest/recommended&quot;, &quot;eslint:recommended&quot;],\n  plugins: [&quot;jest&quot;],\n  // ...\n}`, `15411397626496436000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  env<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"jest/globals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"plugins:jest/recommended\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"jest\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Closing thoughts</h3>\n<p>Setting up Jest for the first time took a bit of work, but I got it all working to\nmy liking and used it for testing in my <a href=\"https://github.com/ParamagicDev/TicTacToeJS\">TicTacToe project</a>.\nThis was meant more so as a guide to myself, but if you found this helpful, feel free\nto share with your friends.</p>","frontmatter":{"title":"JS - Using Jest with Import and Export statements","date":"October 02, 2019","description":"Using jest with import and export statements is not easy. I will detail how to use the ES6 based syntax in the following post."}}},"pageContext":{"slug":"/javascript/usingJestWithImportAndExport/","previous":{"fields":{"slug":"/javascript/documentFragments/"},"frontmatter":{"title":"JS - Appending multiple children to an element"}},"next":{"fields":{"slug":"/javascript/webpackDevServerLiveReloading/"},"frontmatter":{"title":"JS - How to configure webpack-dev-server live-reloading"}}}}}