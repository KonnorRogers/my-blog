{"componentChunkName":"component---src-templates-blog-post-js","path":"/learning-php/part5/","result":{"data":{"site":{"siteMetadata":{"title":"Konnor's Blog","author":"Konnor Rogers"}},"mdx":{"id":"6677fd42-567b-5d95-9906-1d4d35ec705f","excerpt":"Part 5 Laracasts main site \n Laracasts - PHP for beginners Chapters covered: Chapter 10 - Functions Chapter 10 - Functions Functions are simple, but veryâ€¦","frontmatter":{"title":"Learning PHP - Part 5 - Lets make it functional","date":"August 26, 2019"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Learning PHP - Part 5 - Lets make it functional\",\n  \"date\": \"2019-08-26T02:19:15\",\n  \"description\": \"Lets learn a little bit about functions\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Part 5\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com\"\n  }), \"Laracasts main site\"), mdx(\"br\", null), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com/series/php-for-beginners\"\n  }), \"Laracasts - PHP for beginners\")), mdx(\"h2\", null, \"Chapters covered:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com/series/php-for-beginners/episodes/10\"\n  }), \"Chapter 10 - Functions\")), mdx(\"h3\", null, \"Chapter 10 - Functions\"), mdx(\"p\", null, \"Functions are simple, but very powerful reusable pieces of code. They are the\\nbuilding blocks of any language. Lets see how they help shape PHP.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"// index.php\\n<?php\\n\\n// Will echo the values of $one, $two, and $three onto your web page\\nfunction dumper($one, $two, $three){\\n  var_dump($one, $two, $three);\\n}\\n\\n\")), mdx(\"p\", null, \"Lets break it down.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"function\"), \" : This tells the PHP interpreter youre defining a function\", mdx(\"br\", null), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dumper()\"), \" : \\u2018dumper\\u2019 is the name of the function when you call it\", mdx(\"br\", null), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"($one, $two, $three)\"), \" : These are whats called \\u201Carguments\\u201D or\\n\\u201Cparameters\\u201D. These are what are passed into the function, this can be blank.\", mdx(\"br\", null)), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"{\\n  var_dump($one, $two, $three);\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"This calls the function:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.php.net/manual/en/function.var-dump.php\"\n  }), \"var_dump()\"), mdx(\"br\", null), \"\\nThis will output your variables onto the page.\", mdx(\"br\", null)), mdx(\"p\", null, \"Lets get a little bit more advanced. Lets create a dd() function.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"// index.php\\n<?php\\n\\n// Die and dump\\nfunction dd($val){\\n  echo '<pre>';\\n  die(var_dump($val));\\n  echo '</pre>';\\n}\\n\\n// Will stop anything after this function\\ndd('hello world');\\n\\n// Will not run\\ndd('hi there');\\n\")), mdx(\"p\", null, \"Lets look at what \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dd($val)\"), \" is doing.\", mdx(\"br\", null)), mdx(\"p\", null, \"So first, it defines the function dd, then it will take in a 1 variable argument.\", mdx(\"br\", null), \"\\nNext, it will wrap the value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"die(var_dump($val)\"), \" inside of \\\\\", mdx(\"pre\", null, \"\\\\\"), \" tags.\\nFinally, it will kill the execution of the php program. Equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exit\"), \".\"), mdx(\"h4\", null, \"Homework\"), mdx(\"p\", null, \"Assume you own a night club. Only allow people 21 or older inside and print a message\\ntelling them if they\\u2019re allowed to come in.\", mdx(\"br\", null)), mdx(\"p\", null, \"My solution:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"// functions.php\\n<?php\\n\\nfunction isOldEnough($age){\\n  return ($age >= 21 ? true : false);\\n}\\n\\nfunction echoOldEnough($age){\\n  echo '<p>';\\n  echo 'You are, ' . $age . \\\". \\\";\\n  echo (isOldEnough($age) ? \\\"You can enter the club.\\\" : \\\"You cannot enter.\\\");\\n  echo '</p>';\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"// index.php\\n<?php\\n\\nrequire 'functions.php';\\n\\nechoOldEnough(21); // is allowed inside\\nechoOldEnough(20); // is not allowed inside\\n\")), mdx(\"p\", null, \"I\\u2019m not going to go too in depth, but basically \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echoOldEnough()\"), \" is a wrapper around\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isOldEnough()\"), \". This allows you to print a readable message on the webpage.\", mdx(\"br\", null), \"\\nThis function is imported into \\u2018index.php\\u2019 when you run: \", mdx(\"br\", null), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require 'functions.php';\")), mdx(\"p\", null, \"Lets go to Chapter 11 in the next part.\"), mdx(\"h2\", null, \"Links\"), mdx(\"strong\", null, \"[Follow along with my repo](https://github.com/ParamagicDev/php-for-beginners)\", mdx(\"br\", null)), \"[Laracasts main site](https://laracasts.com)\", mdx(\"br\", null), \"[PHP for beginners](https://laracasts.com/series/php-for-beginners)\", mdx(\"br\", null));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/learning-php/part5/","previous":{"id":"d88a3ca7-5bc2-508b-bc95-1a6909f09490","fields":{"slug":"/learning-php/part4/"},"frontmatter":{"title":"Learning PHP - Part 4 - Lets get conditional"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Learning PHP - Part 4 - Lets get conditional\",\n  \"date\": \"2019-08-19T00:28:06\",\n  \"description\": \"Dealing with conditionals and booleans\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Part 4\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com\"\n  }), \"Laracasts main site\"), mdx(\"br\", null), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com/series/php-for-beginners\"\n  }), \"Laracasts - PHP for beginners\")), mdx(\"h2\", null, \"Chapters covered:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com/series/php-for-beginners/episodes/8\"\n  }), \"Chapter 8 - Booleans\"), mdx(\"br\", null), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com/series/php-for-beginners/episodes/9\"\n  }), \"Chapter 9 - Conditionals\")), mdx(\"h2\", null, \"Chapter 8 - Booleans\"), mdx(\"p\", null, \"I diverged from laracasts here. I didn\\u2019t want to make\\nmultiple \\\\<li\", \">\", \" tags, so I used a conditional which is\\nin the next chapter. The code is as follows:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"// index.view.php\\n<!-- Above HTML omitted for brevity -->\\n<ul>\\n  <?php foreach ($task as $key => $value) : ?>\\n    <li>\\n      <strong><?= ucwords($key); ?>: </strong>\\n        <?php if ($key == 'completed') {\\n          $value = ($value) ? 'Completed' : 'Incomplete';\\n        }; ?>\\n      <?= $value; ?>\\n    </li>\\n  <?php endforeach; ?>\\n</ul>\\n<!-- Below HTML omitted for brevity -->\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Yes, I know it looks like a lot but lets highlight the keypart:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"<?php if ($key == 'completed') {\\n  $value = ($value) ? 'Completed' : 'Incomplete';\\n}; ?>\\n\")), mdx(\"strong\", null, \"Line 1: \"), \" \", mdx(\"pre\", null, \"<?php if (\\\\$key == 'completed')\"), mdx(\"p\", null, \"If the current key equal to the string \\u2018completed\\u2019, then move to\\nthe next line, if it\\u2019s not equal to \\u2018completed\\u2019, then move past\\nthe curly braces.\"), mdx(\"strong\", null, \"Line 2: \"), \" `$value = ($value) ? 'Completed' : 'Incomplete';`\", mdx(\"br\", null), \"set $value equal to 'Completed' if TRUE set $value equal to 'Incomplete' if FALSE 'Incomplete'\", mdx(\"br\", null), \"This is called the \\\"ternary operator\\\" should you want to read more\", mdx(\"br\", null), mdx(\"strong\", null, \"Line 3: \"), \" `}; ?\\\\>`\", mdx(\"br\", null), \"End the block, continue to the end\", mdx(\"strong\", null, mdx(\"em\", null, \"Note: \")), mdx(\"br\", null), \" I cannot find any definitive documentation as to whether to use:\", mdx(\"br\", null), \"`True vs TRUE vs true`\", mdx(\"br\", null), \"`False vs FALSE vs false`\", mdx(\"br\", null), \"All of the above are booleans.\", mdx(\"p\", null, \"I found this article \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.php-fig.org/psr/psr-12/#25-keywords-and-types\"\n  }), \"PHP The Right Way Keyword & Type\")), mdx(\"p\", null, \"This suggests to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" for booleans\"), mdx(\"h2\", null, \"Chapter 9 - Conditionals\"), mdx(\"p\", null, \"Plain if statement in php:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"<?php\\n\\nif (condition) {\\n  do stuff\\n} else {\\n  do other stuff\\n};\\n\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"If statements that drop down to plain html to make it more readable:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"<!-- more HTML -->\\n\\n<?php if (condition) : ?>\\n  <p><strong>Words</strong></p>\\n<?php else : ?>\\n  <h1>Do other stuff</h1>\\n<?php endif; ?>\\n\\n<!-- more HTML -->\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Checking if something is NOT true:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"<?php\\n\\n$boolean = true\\nif (! $boolean){\\n  // Will run if the value of $boolean == false\\n} else {\\n  // Will run if the value of $boolean == true\\n}\\n\")), mdx(\"p\", null, \"This is called the \\u201CBANG\\u201D operator.\"), mdx(\"p\", null, \"This is all I got for chapter 9. Lets move to chapter 10.\"), mdx(\"h2\", null, \"Links\"), mdx(\"strong\", null, mdx(\"a\", {\n    href: \"https://github.com/ParamagicDev/php-for-beginners)\"\n  }, \"Follow along with my repo\"), mdx(\"br\", null)), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com\"\n  }), \"Laracasts main site\")), mdx(\"br\", null), \"[PHP for beginners](https://laracasts.com/series/php-for-beginners)\", mdx(\"br\", null), \"[PHP The Right Way](https://phptherightway.com)\");\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"325d71db-78e2-5a82-80a9-e0d5529ecc39","fields":{"slug":"/learning-php/part6/"},"frontmatter":{"title":"Learning PHP - Part 6 - MySQL? Or Your SQL?"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Learning PHP - Part 6 - MySQL? Or Your SQL?\",\n  \"date\": \"2019-08-26T02:24:59\",\n  \"description\": \"Lets learn some basics of SQL based databases, in this case, MySQL\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Part 6\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com\"\n  }), \"Laracasts main site\"), mdx(\"br\", null), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com/series/php-for-beginners\"\n  }), \"Laracasts - PHP for beginners\")), mdx(\"h2\", null, \"Chapters covered\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://laracasts.com/series/php-for-beginners/episodes/11\"\n  }), \"Chapter 11 - Databases 101\")), mdx(\"h3\", null, \"Chapter 11 - MySQL 101\"), mdx(\"p\", null, \"Now its time to switch gears. Lets learn about MySQL. Its a relational database,\\nor SQL-based database, which essentially means everythings related, as implied\\nby the name via various \\u2018id\\u2019 columns. SQL stands for \\u2018Structured Query Language\\u2019.\\nIt\\u2019s simply a standardized way of accessing data in a database.\"), mdx(\"p\", null, \"This is in contrast to a NoSQL-based database. The most obvious NoSQL-based database\\nis MongoDB. NoSQL essentially follows a way of storing data nonrelationally. I won\\u2019t\\nget into the advantages and disadvantages of both, just know that both exist.\"), mdx(\"h4\", null, \"Installing MySQL - Ubuntu 18.04\"), mdx(\"p\", null, \"Feel free to check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.mysql.com/downloads/\"\n  }), \"MySQL downloads page\"), \" for\\nyour specific needs.\"), mdx(\"p\", null, \"For me I used the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo apt update\\nsudo apt install -y mysql-server # installs mysql\\nsudo mysql_secure_installation # will provide various prompts\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Ensure its working:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mysql # enters a prompt\\n  -> exit\\nsudo service mysql status\\nsudo service mysql stop\\nsudo service mysql start\\nsudo service mysql status\\n\")), mdx(\"br\", null), mdx(\"em\", null, \"If you are having permission issues: \", mdx(\"a\", {\n    href: \"#issues\"\n  }, \"Check this out\")), mdx(\"p\", null, \"There are additional configs to add users, but thats a little\\ntoo advanced for what were doing here.\"), mdx(\"h4\", null, \"Using MySQL\"), mdx(\"p\", null, \"Creating your first database:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mysql\\n -> show databases;\\n# Lists databases\\n -> create database todo;\\n# Query OK, 1 row affected\\n -> show databases; # should show mytodo\\n -> use mytodo; # This tells mysql what database to switch into and use\\n -> show tables; # should be empty\\n -> CREATE TABLE todos (description TEXT, completed BOOLEAN);\\n# Query OK, 0 rows affected\\n -> show tables; # Should show your new todos table\\n -> describe todos; # Shows your fields and types\\n -> drop tables; # Removes your todos tables\\n -> CREATE TABLE todos (id INTEGER PRIMARY KEY AUTO_INCREMENT, description TEXT NOT NULL, completed BOOLEAN NOT NULL);\\n -> show tables;\\n -> describe todos;\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"I\\u2019m not going to get too in depth with the above commands, but I will touch on the\\nfollowing query.\"), mdx(\"p\", null, \"Here\\u2019s the command:\", mdx(\"br\", null), mdx(\"br\", null), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CREATE TABLE todos (id integer PRIMARY KEY AUTO_INCREMENT, description text NOT NULL, completed boolean NOT NULL);\"), mdx(\"br\", null)), mdx(\"p\", null, \"Here\\u2019s what it\\u2019s doing:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CREATE TABLE todos();\"), \" Create the table called \\u2018todos\\u2019\", mdx(\"br\", null), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id integer PRIMARY KEY AUTO_INCREMENT\"), \": The first field will be the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" field,\\nthis field will accept an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"INTEGER\"), \". This field will also be the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PRIMARY KEY\"), \".\\nThis means that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" will be the unique identifier for whatever data is stored.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AUTO_INCREMENT\"), \" means the user does not have to supply the id integer. Instead, the\\ndatabase will automatically set the id starting from 1.\", mdx(\"br\", null)), mdx(\"h4\", null, \"Manipulating a tables data\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mysql\\n-> INSERT INTO todos (description, completed) VALUES('Go to the store', false);\\n# Will auto-add the id, will add the description 'Go to store', and the boolean false\\n\\n-> SELECT * FROM todos;\\n# Will show all columns in the todos table\\n\")), mdx(\"h4\", null, \"Summarizing\"), mdx(\"h4\", null, \"Installing a MySQL GUI - \", mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"https://dev.mysql.com/doc/workbench/en/\"\n  }), \"MySQL-Workbench\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mysql\"), \" Start mysql\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> create database \\\\<database\\\\>;\"), \" Create the database with \\\\<database\", \">\", \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> use database <\\\\database\\\\>;\"), \" Set the current database to query to \\\\<database\", \">\", \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> CREATE TABLE \\\\<table\\\\>(<\\\\fields\\\\>);\"), \" Create a table within the database with a name of \\\\<table\", \">\", \"\\nand has the following \\\\<fields\", \">\", \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> show tables;\"), \" List the tables in your database.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> describe <\\\\table\\\\>;\"), \" Shows the fields of the given \\\\<table\", \">\", \".\"), mdx(\"p\", null, \"Simple manipulation:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> INSERT INTO <\\\\table\\\\>(<\\\\field1\\\\>, \\\\<field2\\\\>) VALUES(<\\\\value1\\\\>, <\\\\value2\\\\>);\"), \"\\nInsert the following\\nvalues into the specified \\\\<field\", \">\", \" for the given table name. Order is important.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> SELECT * FROM \\\\<table\\\\>;\")), mdx(\"p\", null, \"Allows you to view all columns and their data from the given\\n\\\\<table\", \">\", \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-> SELECT * FROM \\\\<table\\\\>WHERE id = 1;\")), mdx(\"p\", null, \"Select all columns from \\\\<table\", \">\", \" but only where the id is equal to 1.\"), mdx(\"p\", null, \"Now using the command line for everything is not very fun. You can simply google:\"), mdx(\"p\", null, \"\\u2018mysql database GUI tools\\u2019\"), mdx(\"p\", null, \"I decided to use the officially supported mysql-workbench.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo apt install mysql-workbench\\nmysql-workbench\\n\")), mdx(\"p\", null, \"Easy, simple, I like it.\"), mdx(\"h3\", {\n    id: \"issues\"\n  }, \"Issues\"), mdx(\"h4\", null, \"Running mysql without sudo\"), mdx(\"strong\", null, \"Note: \"), \" I ran into the issue of having to run mysql without sudo. I found this guide: [DigitalOcean Guide to MySQL](https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-18-04).\", mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo mysql -> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password\\nBY 'password'; -> FLUSH PRIVILEGES;\\n\")), mdx(\"p\", null, \"Yes, you can create a new user and then provide privileges that way. Again, beyond\\nthe scope of this, and this wont be used in production either.\"), mdx(\"h4\", null, \"Running mysql-workbench without sudo\"), mdx(\"p\", null, \"I also had an issue running mysql-workbench without sudo. I solved this by\\nchowning ~/.mysql\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo chown $USER:$USER ~/.mysql\\nmysql-workbench\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"I\\u2019ll let you figure out other configurations with mysql-workbench. Play around with\\nit. Don\\u2019t rush, find other commands. Have fun! Ill see you in the next part about\\nclasses.\"), mdx(\"h2\", null, \"Links\"), mdx(\"strong\", null, mdx(\"a\", {\n    href: \"https://github.com/ParamagicDev/php-for-beginners\"\n  }, \"My repo\"), mdx(\"br\", null)), \"[Laracasts main site](https://laracasts.com)\", mdx(\"br\", null), \"[PHP for beginners](https://laracasts.com/series/php-for-beginners)\", mdx(\"br\", null), \"[MySQL downloads page](https://www.mysql.com/downloads/)\", mdx(\"br\", null), \"[DigitalOcean Guide to MySQL](https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-18-04).\", mdx(\"br\", null), \"[MySQL-Workbench](https://dev.mysql.com/doc/workbench/en/)\", mdx(\"br\", null));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}