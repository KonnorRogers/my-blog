{"componentChunkName":"component---src-templates-blog-post-js","path":"/learning-php/part4/","webpackCompilationHash":"75c6e1678864bf17e7bb","result":{"data":{"site":{"siteMetadata":{"title":"Konnor's Blog","author":"Konnor Rogers"}},"markdownRemark":{"id":"c5d6e7f7-1a4f-5a1b-b129-b4bb7ad59339","excerpt":"Part 4 Laracasts main site\nLaracasts - PHP for beginners Chapters covered: Chapter 8 - Booleans\nChapter 9 - Conditionals Chapter 8 - Booleans I diverged from…","html":"<h1>Part 4</h1>\n<p><a href=\"https://laracasts.com\">Laracasts main site</a><br>\n<a href=\"https://laracasts.com/series/php-for-beginners\">Laracasts - PHP for beginners</a></p>\n<h2>Chapters covered:</h2>\n<p><a href=\"https://laracasts.com/series/php-for-beginners/episodes/8\">Chapter 8 - Booleans</a><br>\n<a href=\"https://laracasts.com/series/php-for-beginners/episodes/9\">Chapter 9 - Conditionals</a></p>\n<h2>Chapter 8 - Booleans</h2>\n<p>I diverged from laracasts here. I didn’t want to make\nmultiple &#x3C;li> tags, so I used a conditional which is\nin the next chapter. The code is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">// index.view.php\n<span class=\"token comment\">&lt;!-- Above HTML omitted for brevity --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$task</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token delimiter important\">?></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span> <span class=\"token function\">ucwords</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span>: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'completed'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$value</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token single-quoted-string string\">'Completed'</span> <span class=\"token punctuation\">:</span> <span class=\"token single-quoted-string string\">'Incomplete'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span>\n      <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">endforeach</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- Below HTML omitted for brevity --></span></code></pre></div>\n<br>\n<p>Yes, I know it looks like a lot but lets highlight the keypart:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'completed'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$value</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token single-quoted-string string\">'Completed'</span> <span class=\"token punctuation\">:</span> <span class=\"token single-quoted-string string\">'Incomplete'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span></code></pre></div>\n<p><strong>Line 1: </strong> <code class=\"language-text\">&lt;?php if ($key == &#39;completed&#39;) {</code> <br>\nIf the current key equal to the string ‘completed’, then move to\nthe next line, if it’s not equal to ‘completed’, then move past\nthe curly braces.<br></p>\n<p><strong>Line 2: </strong> <code class=\"language-text\">$value = ($value) ? &#39;Completed&#39; : &#39;Incomplete&#39;;</code><br>\nset $value equal to ‘Completed’ if TRUE\nset $value equal to ‘Incomplete’ if FALSE\n‘Incomplete’<br>\nThis is called the “ternary operator” should you want to read more<br></p>\n<p><strong>Line 3: </strong> <code class=\"language-text\">}; ?&gt;</code><br>\nEnd the block, continue to the end</p>\n<p><strong><em>Note: </em></strong><br> I cannot find any definitive documentation as to whether to use:<br>\n<code class=\"language-text\">True vs TRUE vs true</code><br>\n<code class=\"language-text\">False vs FALSE vs false</code><br>\nAll of the above are booleans.</p>\n<p>I found this article <a href=\"https://www.php-fig.org/psr/psr-12/#25-keywords-and-types\">PHP The Right Way Keyword &#x26; Type</a></p>\n<p>This suggests to use <code class=\"language-text\">true</code> and <code class=\"language-text\">false</code> for booleans</p>\n<h2>Chapter 9 - Conditionals</h2>\n<p>Plain if statement in php:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">do</span> stuff\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">do</span> other stuff\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<br>\n<p>If statements that drop down to plain html to make it more readable:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">&lt;!-- more HTML --></span>\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token delimiter important\">?></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Words<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span> <span class=\"token delimiter important\">?></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Do other stuff<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">endif</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span>\n\n<span class=\"token comment\">&lt;!-- more HTML --></span></code></pre></div>\n<br>\n<p>Checking if something is NOT true:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token variable\">$boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean constant\">true</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token variable\">$boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Will run if the value of $boolean == false</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Will run if the value of $boolean == true</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>This is called the “BANG” operator.</p>\n<p>This is all I got for chapter 9. Lets move to chapter 10.</p>\n<h2>Links</h2>\n<p><strong><a href=\"https://github.com/ParamagicDev/php-for-beginners\">Follow along with my repo</a><br></strong>\n<a href=\"https://laracasts.com\">Laracasts main site</a><br>\n<a href=\"https://laracasts.com/series/php-for-beginners\">PHP for beginners</a><br>\n<a href=\"https://phptherightway.com\">PHP The Right Way</a></p>","frontmatter":{"title":"Learning PHP - Part 4 - Lets get conditional","date":"August 19, 2019","description":"Dealing with conditionals and booleans"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/learning-php/part4/","previous":{"fields":{"slug":"/learning-php/part3/"},"frontmatter":{"title":"Learning PHP - Part 3 - Arrays, Arrays, and more Arrays"}},"next":{"fields":{"slug":"/learning-php/part5/"},"frontmatter":{"title":"Learning PHP - Part 5 - Lets make it functional"}}}}}