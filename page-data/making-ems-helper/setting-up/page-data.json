{"componentChunkName":"component---src-templates-blog-post-js","path":"/making-ems-helper/setting-up/","result":{"data":{"site":{"siteMetadata":{"title":"Konnor's Blog","author":"Konnor Rogers"}},"mdx":{"id":"f84ae7a7-a286-56e8-bcf5-df1e046dfe3b","excerpt":"Github Repo Creating a Rails 6 app rails new ems_helper --database=postgresql This will generate the initial project structure. I will be using postgresql as myâ€¦","frontmatter":{"title":"Making EMS Helper - Setting up","date":"December 08, 2019"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Making EMS Helper - Setting up\",\n  \"date\": \"2019-12-08T22:40:37\",\n  \"description\": \"Detailing the initial setup of EMS Helper with Rails 6, Webpack, TailwindCSS, Docker, and Docker-Compose\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"https://github.com/ParamagicDev/ems_helper/tree/cd623419d8c885cac66c1d3e6fa0f8507d35b686\"\n  }), \"Github Repo\")), mdx(\"h2\", null, \"Creating a Rails 6 app\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rails new ems_helper --database=postgresql\")), mdx(\"p\", null, \"This will generate the initial project structure. I will be using postgresql as my database.\"), mdx(\"h3\", null, \"Adding .env files\"), mdx(\"p\", null, \"I added the .env file as well the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dotenv-rails\"), \" gem to allow the use\\nof the .env files to allow for easy local development for things that requires\\nlogins or API keys.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ParamagicDev/ems_helper/blob/master/Gemfile\"\n  }), \"My gemfile\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ruby\"\n  }), \"# Gemfile\\n\\n# ...\\n# Make sure it is the first gem added. This way gems that require privileges\\n# can inherit from dotenv-rails\\ngem 'dotenv-rails', groups: %i[development test]\\n# ...\\n\")), mdx(\"h2\", null, \"Docker\"), mdx(\"p\", null, \"First things first, setup a Dockerfile in the root directory.\"), mdx(\"h3\", null, \"Adding Dockerfile\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ParamagicDev/ems_helper/blob/master/Dockerfile\"\n  }), \"My Dockerfile\")), mdx(\"p\", null, \"Basically, pull in Ruby 2.6.3, add nodejs, and add all packages is what this Dockerfile does.\"), mdx(\"h3\", null, \"Setting up docker-compose\"), mdx(\"p\", null, \"docker-compose is a utility provided by Docker to pull in various components.\"), mdx(\"p\", null, \"IE: Redis, Memcache, caching layer, PostgresQL, MySQL, MonogoDB databases, and various\\nother web components.\"), mdx(\"p\", null, \"Here is a link to my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ParamagicDev/ems_helper/blob/master/docker-compose.yml\"\n  }), \"docker-compose.yml\"), \" file which pulls in PostgresQL.\"), mdx(\"p\", null, \"I pulled most of this config off the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.docker.com/compose/rails/\"\n  }), \"Docker official documentation\"), \".\"), mdx(\"h3\", null, \"Docker-compose commands\"), mdx(\"p\", null, \"Before we get into building the project, let\\u2019s take a look at some basic commands:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose down\"), \" to bring down the container\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose up --build\"), \" rebuilds the container if you make changes.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose run web <command>\"), \" will run the commands from inside the container.\"), mdx(\"p\", null, \"If for some reason the items listed below do not work, try resetting the container.\"), mdx(\"p\", null, \"Also, if you add something to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Gemfile\"), \", to update the container you must do the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker-compose run web bundle install\\ndocker-compose down\\n\\n# You must rebuild the container because the Gemfile.lock has been updated as well\\ndocker-compose up --build\\n\")), mdx(\"h3\", null, \"Setting up Rails with docker-compose\"), mdx(\"p\", null, \"Alright time to start everything up.\"), mdx(\"p\", null, \"Run a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose up --build\"), \".\\nThen run the following inside a seperate terminal once that has all finished\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker-compose run --rm web rails db:setup\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"You will most likely run into an issue with postgres.\\nTo fix this, navigate to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./config/database.yml\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"default: &default\\n  adapter: postgresql\\n  encoding: unicode\\n  host: <%= ENV['PG_HOST'] %>\\n  username: <%= ENV['PG_USER'] %>\\n  password: <%= ENV['PG_PASSWORD'] %>\\n  pool: 5\\n\\ndevelopment:\\n  <<: *default\\n  database: myapp_development\\n\\ntest:\\n  <<: *default\\n  database: myapp_test\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Now here\\u2019s where it gets a little tricky.\", mdx(\"br\", null), \"\\nIn the root directory, create a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# .env\\n\\nPG_USER='postgres'\\n\\n# Docker does not use a password on the container for local development\\nPG_PASSWORD=''\\n\\n# Change this to '' if not using docker. I have also set this manually inside of\\n# the docker-compose.yml file.\\nPG_HOST='db'\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Docker documentation says to use \\u2018db\\u2019 as the host in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"database.yml\"), \" file.\", mdx(\"br\", null), \"\\nYou will run into an error if you do not do this. I spent over 2 hours debugging this.\\nNot a fun time.\"), mdx(\"p\", null, \"Now, you should be able to create the database!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# equivalent to rails db:create && rails db:migrate && rails db:seed\\ndocker-compose run --rm web rails db:setup\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Finally, in your browser navigate to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:3000\")), mdx(\"p\", null, \"The \\u201CHello, Welcome to Rails\\u201D page should appear!\"), mdx(\"h4\", null, \"Permissions Errors\"), mdx(\"p\", null, \"If on Linux, for me there are some permissions issues with Docker. \", mdx(\"br\", null), \"\\nEnsure to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chown -R .\"), \" from the root directory after using Docker if you run into\\npermissions issues\"), mdx(\"h3\", null, \"Adding TailwindCSS\"), mdx(\"p\", null, \"I really enjoy using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tailwindcss.com\"\n  }), \"TailwindCSS\"), \" so I added it into\\nthe application.\"), mdx(\"p\", null, \"There\\u2019s a few steps to this.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn add tailwindcss\"), \" - add the tailwindcss node module\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Then, create a tailwind stylesheet called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./app/javascript/stylesheets/tailwind.scss\"), \"\\nAdd the base classes.\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scss\"\n  }), \"// app/javascript/stylesheets/tailwind.css\\n@import \\\"tailwindcss/base\\\";\\n@import \\\"tailwindcss/components\\\";\\n@import \\\"tailwindcss/utilities\\\";\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Inside \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./app/javascript/packs/application.js\"), \" add the following require statement.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// app/javascript/packs/application.js\\n\\n// ...\\nrequire(\\\"stylesheets/tailwind.scss\\\")\\n// ...\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Finally, inside of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./app/views/layouts/application.html.erb\"))), mdx(\"p\", null, \"Add a stylesheet pack tag inside the head of the view\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-erb\"\n  }), \"<%# app/views/layouts/application.html.erb %>\\n\\n<head>\\n# ...\\n<%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>\\n# ...\\n</head>\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unfortunately, you can\\u2019t really test that everything is working yet. So, let\\u2019s make it work!\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker-compose run --rm web rails generate controller static_pages index\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Navigate to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config/routes.rb\"), \" and add the following\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ruby\"\n  }), \"Rails.application.routes.draw do\\n  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html\\n  root 'static_pages#index'\\nend\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ol\", {\n    \"start\": 6\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Bringing it all together, to ensure everything works as correctly, add a Tailwind\\nclass to an html element.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-erb\"\n  }), \"<%# app/views/static_pages/index.html.erb %>\\n\\n<%# ... %>\\n<body>\\n  <div class=\\\"text-red-500\\\">\\n    Hello there!\\n  </div>\\n</body>\\n<%# ... %>\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"And thats it! You\\u2019re now fully setup with Rails 6, webpack, TailwindCSS, Docker / docker-compose\\nFrom here, its time to start parsing the API content. That will be the next installment\\nI will write!\"), mdx(\"h2\", null, \"Links\"), mdx(\"p\", null, \"Special thanks to Chris @ gorails for his free content.\\nHe helped me with the tailwind setup.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gorails.com/episodes/tailwindcss-1-0-with-rails-6\"\n  }), \"Tailwind Setup Video\")), mdx(\"p\", null, \"Docker documentation is fantastic check it out.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.docker.com/\"\n  }), \"Docker Docs\")), mdx(\"p\", null, \"Check out the Rails docs obviously\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rubyonrails.org/\"\n  }), \"Rails Docs\")), mdx(\"p\", null, \"Finally, feel free to follow along with my repo. Most of the development will take\\nplace on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"development branch\"), \".\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ParamagicDev/ems_helper\"\n  }), \"Github Repo\")), mdx(\"h4\", null, \"EDIT\"), mdx(\"p\", null, \"I create a Rails 6 skeleton for tailwind css \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ParamagicDev/rails6-skeleton/tree/tailwindcss\"\n  }), \"HERE\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/making-ems-helper/setting-up/","previous":{"id":"098adba7-03b5-5c87-b629-4340f04c48db","fields":{"slug":"/making-ems-helper/introduction/"},"frontmatter":{"title":"Making EMS Helper - Introduction"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Making EMS Helper - Introduction\",\n  \"date\": \"2019-12-05T05:07:36\",\n  \"description\": \"This is the beginning of EMS Helper. A service meant to provide people with the ability to quickly locate the closest appropriate hospital.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Tech Stack\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ruby on Rails v6.0.1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ruby 2.6.3\")), mdx(\"h3\", null, \"Explanation\"), mdx(\"p\", null, \"I am most familiar with Ruby on Rails and therefore felt I would be most\\nproductive using Ruby on Rails for this project\"), mdx(\"h2\", null, \"Deployment\"), mdx(\"p\", null, \"I still have not decided between a self host option like Linode / DigitalOcean\\nor letting Heroku handle it for me. As this is a small personal project, and I would\\nlike to get a feel for DevOps I will most likely be self hosting using DigitalOcean / Linode\\ncombined with Docker containers.\"), mdx(\"h2\", null, \"Scope\"), mdx(\"p\", null, \"I plan for this to be very limited scope. Very simply, I plan to have a database\\nof every hospital. Each hospital will have an address and series of boolean\\nvalues as to its capabilities. The biggest challenge will be\\naggregating the appropriate data.\"), mdx(\"h2\", null, \"Data aggregation\"), mdx(\"p\", null, \"Data aggregation seems to be the biggest challenge, thankfully someone has already\\nsomewhat solved this problem.\", mdx(\"br\", null), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hifld-geoplatform.opendata.arcgis.com/datasets/hospitals\"\n  }), \"https://hifld-geoplatform.opendata.arcgis.com/datasets/hospitals\"), \"\\nThe Homeland Infrastructure Foundation has aggregated all hospitals in the 50 states\\nvia each individual state department. They even have an easy to use API as well\\nas the added bonus of Trauma levels.\"), mdx(\"p\", null, \"Unfortunately, they do not have things such as Stroke Centers, Cath labs, and various\\npoint of entry capabilites. I will most likely be creating a scraper using Nokogiri to get this information from\\neach individual states respective website.\"), mdx(\"p\", null, \"In addition, I plan to have a form for users to submit for review the addition of a new\\nhospital. I will most likely have to add a sign in system at some point\\nshould this project gain any traction.\"), mdx(\"h2\", null, \"Geocoding\"), mdx(\"p\", null, \"What is geocoding? Geocoding and geolocation a way of quantifying a longitude\\nand latitude location for any given location.\", mdx(\"br\", null), \"\\nGeocoding and geolocation will be the basis of using a user\\u2019s current location and searching the radius\\nfor the closest appropriate facility. This is a big part of this project\", mdx(\"br\", null)), mdx(\"p\", null, \"Again, this is another solved problem. Initially I had thought Google Maps was the only option,\\non further review there is a lovely RubyGem called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/alexreisner/geocoder\"\n  }), \"Geocoder\"), \"\\nwhich aggregates multiple APIs. I have not dug into what service it would call out to\\nas currently this is a tightly scoped project with no plans of hitting API request limits.\"), mdx(\"h2\", null, \"Database backups\"), mdx(\"p\", null, \"I have not settled on any particular service for database backups yet.\\nIt is a consideration I have and it is worth noting. The database plans to be fairly\\nstatic, however, it\\u2019s always good to be prepared.\"), mdx(\"p\", null, \"As of now, the easiest option seems to set up a cron job to backup the database using\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg_dump\"), \" and then sending that file to a remote server maybe like an AWS S3 bucket?\"), mdx(\"p\", null, \"Alternatively, I found this github repo \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/fastmonkeys/stellar\"\n  }), \"https://github.com/fastmonkeys/stellar\"), \"\\nwhich appears to be a faster alternative to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg_dump\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg_restore\"), \". I still have not\\nsettled on a good option but as this fleshes out it will become important\"), mdx(\"h2\", null, \"Error Tracking\"), mdx(\"p\", null, \"Sentry. Need I say more? Sentry is great its raved about, I may even integrate\\nwith LogRocket. Again, future problem, not needed right away.\"), mdx(\"h2\", null, \"CI / CD Pipeline\"), mdx(\"p\", null, \"Yes, its a small project, but following best practices is not a bad thing.\\nCurrently, I plan on using github actions as my CI / CD. Setting up Jenkins / Travis / CircleCI\\nseems like more headache than using an integrated option.\"), mdx(\"h2\", null, \"Using docker-compose\"), mdx(\"p\", null, \"As part of any good CI / CD pipeline, ideally I should be using Docker / containerization.\\nI have setup my docker-compose and Dockerfile in my repo to be used to provide a reproducible\\nenvironment. Unfortunately, I feel docker local development needs a little work,\\nbut it definitely has its place in a CI / CD pipeline for sure as well as providing\\na starting point for new users.\"), mdx(\"h2\", null, \"Donations!\"), mdx(\"p\", null, \"Its important to make sure that this can at least be self sustainable. I plan to\\ncreate a donations page which integrates with Stripe / Paypal to allow people to keep\\nthe lights on!\"), mdx(\"h2\", null, \"Closing thoughts\"), mdx(\"p\", null, \"EMS Helper plans to be a free service which will take donations in order to keep the service running. I currently do not have plans to make it a paid service. In addition, you can follow along with my progress on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ParamagicDev/ems_helper/tree/development\"\n  }), \"development branch on Github.\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"7a590ae5-786d-5877-b646-a78a962650d9","fields":{"slug":"/making-ems-helper/hiccups/"},"frontmatter":{"title":"Making EMS Helper - Hiccups"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Making EMS Helper - Hiccups\",\n  \"date\": \"2019-12-18T20:48:45\",\n  \"description\": \"Detailing a few of the issues faced when attempting to populate the database.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Aggregating the data\"), mdx(\"p\", null, \"Unfortunately, as detailed in my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://paramagicdev.github.io/my-blog/making-ems-helper/introduction\"\n  }), \"previous post\"), \"\\npopulating the database will not be as easy as expected. Upon further inspection,\\nthe database provided at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hifld-geoplatform.opendata.arcgis.com/datasets/hospitals/geoservice\"\n  }), \"https://hifld-geoplatform.opendata.arcgis.com/datasets/hospitals/geoservice\"), \" does not have a complete dataset. For example,\\nit only includes Westerly Hospital and the VA - Medical Center. As a result, I had to rethink\\nhow to aggregate the data.\"), mdx(\"h2\", null, \"Using Wikipedia\"), mdx(\"p\", null, \"Wikipedia appears to have a semi-complete list. May be best to look into this as a means\\nto populate the database. They also appear to have a semi complete list of trauma centers.\\nNo mention of PCI facilities is made on Wikipedia nor stroke centers.\"), mdx(\"h2\", null, \"Moving forward\"), mdx(\"p\", null, \"Unfortunately, it appearst this projects is more data aggregation heavy than it is\\ntechnically challenging. The time required to make the project work would be enormous.\"), mdx(\"p\", null, \"Either on my part of getting the data myself or by using community involvement\\nand filtering in new locations. It just doesn\\u2019t seem feasible at this time.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}