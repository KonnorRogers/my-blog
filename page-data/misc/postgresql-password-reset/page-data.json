{"componentChunkName":"component---src-templates-blog-post-js","path":"/misc/postgresql-password-reset/","webpackCompilationHash":"72fb6b7fc7679253a45c","result":{"data":{"site":{"siteMetadata":{"title":"Konnor's Blog","author":"Konnor Rogers"}},"markdownRemark":{"id":"f59dafee-0093-558a-b795-5eb5e4750b76","excerpt":"Purpose Setting up a database for the first time is never any fun. In this short post I will detail how I have come to setup PostgresQL for local development…","html":"<h2>Purpose</h2>\n<p>Setting up a database for the first time is never any fun. In this short post I will detail how I have come to setup PostgresQL for local development environments.</p>\n<h3>Quick Start</h3>\n<h4>WARNING:</h4>\n<p>This will change all instances of /etc/postgresql/*/main/pg_hba.conf auth options to ‘trust’ <br></p>\n<p>Proceed with caution:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/ParamagicDev/config-files.git ~/paramagic-config-files\n<span class=\"token builtin class-name\">cd</span> ~/paramagic-config-files\n./scripts/postgres-setup.sh\n./scripts/postgres-pass-reset.sh\n\npsql -U postgres\n\n<span class=\"token comment\"># This will drop you into a postgres instance as the admin</span>\n$ alter user postgres with password <span class=\"token string\">'YOUR SNAZZY PASSWORD'</span><span class=\"token punctuation\">;</span>\n$ <span class=\"token punctuation\">\\</span>q\n\n<span class=\"token comment\"># This will make postgres require a password in order</span>\n<span class=\"token comment\"># to be instantiated</span>\n./scripts/postgres-md5-require.sh</code></pre></div>\n<h3>Explanation</h3>\n<p>Okay, I’m assuming you read the quick start, saw the warnings, and decided\nto read a little more about whats happening in these scripts.</p>\n<h4>Installation scripts</h4>\n<h5><a href=\"https://github.com/ParamagicDev/config-files/tree/master/scripts\">My PostgresQL scripts</a></h5>\n<p>The contents of these scripts was partially stolen from the <a href=\"https://github.com/docker-library/postgres/blob/4a82eb932030788572b637c8e138abb94401640c/12/Dockerfile\">Official PostgresQL Dockerfile</a></p>\n<p>So what does this script do?</p>\n<p>Well first let me show you the contents.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#!/bin/bash\n\n# postgres-setup.sh\npg_user=&quot;postgres&quot;\npg_dir=&quot;/var/lib/postgresql&quot;\npg_data=&quot;/var/lib/postgresql/data&quot;\n\n# Installs postgresql\nsudo apt update &amp;&amp; sudo apt install \\\n  postgresql postgresql-contrib postgresql-common libpq-dev -y\n\n# Creates the postgres user and postgres group\nsudo groupadd &quot;$pg_user&quot;\nsudo useradd -r -g &quot;$pg_user&quot; --home-dir=&quot;$pg_dir&quot; --shell=/bin/bash &quot;$pg_user&quot;\n\nsudo mkdir -p &quot;$pg_dir&quot;\nsudo chown -R &quot;$pg_user&quot;:&quot;$pg_user&quot; &quot;$pg_dir&quot;\n\nsudo mkdir -p &quot;$pg_dir&quot; &amp;&amp; sudo chown -R &quot;$pg_user&quot;:&quot;$pg_user&quot; &quot;$pg_dir&quot; &amp;&amp; \\\n  sudo chmod 2777 /var/run/postgresql\n\n\n# this 777 will be replaced by 700 at runtime (allows semi-arbitrary &quot;--user&quot; values)\nsudo mkdir -p &quot;$pg_data&quot; \\\n  &amp;&amp; sudo chown -R &quot;$pg_user&quot;:&quot;$pg_user&quot; &quot;$pg_data&quot; \\\n  &amp;&amp; sudo chmod 777 &quot;$pg_data&quot;bash</code></pre></div>\n<p>Basically, this script says:<br></p>\n<ol>\n<li>Download postgres from the apt repository (default debian based package manager)\n<br></li>\n<li>Then after downloading postgres, create a user for the postgres database named “postgres”\n<br></li>\n<li>Create the appropriate directories and change the read / write / execute properties of each directory based on the offical PostgresQL Dockerfile.\n<br></li>\n</ol>\n<p>In a nutshell, thats all that the script does.</p>\n<p>Now, you can try logging into the database from the command line.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">psql -U postgres</code></pre></div>\n<p>This probably will not work due to permissions set in a file called <code class=\"language-text\">pg_hba.conf</code></p>\n<p>For me, this file was located on my Ubuntu 18.10 &#x26; 19.04 machines in the location:</p>\n<p><code class=\"language-text\">/etc/postgresql/&lt;version-number&gt;/main/pg_hba.conf</code></p>\n<p>So heres where things get tricky. You may have previously setup a password youve forgotten, maybe theres something weird going on and you cant get into the database, anythings possible.</p>\n<p>If you checked out the <code class=\"language-text\">pg_hba.conf file</code> you’ll see a setup similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\"># ... above code omitted for brevity\n# Database administrative login by Unix domain socket\nlocal   all             postgres                                peer\n\n# TYPE  DATABASE        USER            ADDRESS                 METHOD\n\n# &quot;local&quot; is for Unix domain socket connections only\nlocal   all             all                                     peer\n# IPv4 local connections:\nhost    all             all             127.0.0.1/32            md5\n# IPv6 local connections:\nhost    all             all             ::1/128                 md5\n# Allow replication connections from localhost, by a user with the\n# replication privilege.\n#local   replication     postgres                                peer\n#host    replication     postgres        127.0.0.1/32            peer\n#host    replication     postgres        ::1/128                 peer</code></pre></div>\n<p>Without getting too technical, the very last column of each row decides the\nauthentication option you would like to use. If for some reason you cannot\nget access to your database, there may be a password set for the user that\nyou don’t know.</p>\n<p>The easiest way to fix this is to change all options in the last column to <code class=\"language-text\">trust</code></p>\n<p>I made a script specifically for changing the options in the last column to <code class=\"language-text\">trust</code></p>\n<h4><a href=\"https://github.com/ParamagicDev/config-files/blob/master/scripts/postgres-pass-reset.sh\">Change to trust script</a></h4>\n<p>Now you can go in and change the password for the user to whatever you would like it to be.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">psql -U postgres\n\n<span class=\"token comment\"># drops you into a postgres instance</span>\n-<span class=\"token operator\">></span> alter user postgres with password <span class=\"token string\">'NEW_PASSWORD'</span>\"\n-<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>q</code></pre></div>\n<p>This will change password of the user ‘postgres’ to the value of ‘NEW_PASSWORD’</p>\n<p>Now if you would like to lock your database back down I created a script for that as well!</p>\n<h4><a href=\"https://github.com/ParamagicDev/config-files/blob/master/scripts/postgres-md5-require.sh\">Reset auth options to md5 script</a></h4>\n<p>This will now require a password everytime you attempt to login.</p>\n<h3>Additional notes</h3>\n<p>If you don’t want to use my scripts you can manually edit your\n<code class=\"language-text\">/etc/postgresql/&lt;version_number&gt;/main/pg_hba.conf</code> to reflect the options you would like.</p>\n<p>Be careful with this, as for me I’m using postgresql version 11.5, however, when editing\n<code class=\"language-text\">/etc/postgresql/11/main/pg_hba.conf</code> It did not properly reflect my settings.</p>\n<p>I had to edit <code class=\"language-text\">/etc/postgresql/9.5/pg_hba.conf</code> which is the reason my scripts will change\nthe value of the auth method in all <code class=\"language-text\">/etc/postgresql/&lt;version-number&gt;/pg_hba.conf</code> files</p>\n<h3>Closing thoughts</h3>\n<p>Setting up a database is never fun which is why I now always try to script the process.\nThis one had me stumped for a whole day before I came across the relevant articles. I hope\nthis article can help you as much as it helped me! Have a fantastic day.</p>\n<p>Any questions feel free to email me: Konnor7414@gmail.com</p>\n<p>I don’t claim to know all, and I don’t even work as a software developer fulltime…(yet)\nI’m sure I made some errors and some mistakes. Feel free to correct me and I will update the article</p>\n<p>Setting up a database is never fun which is why I now always try to script the process.\nThis one had me stumped for a whole day before I came across the relevant articles. I hope\nthis article can help you as much as it helped me! Have a fantastic day.</p>\n<p>Any questions feel free to email me: Konnor7414@gmail.com</p>\n<p>I don’t claim to know all, and I don’t even work as a software developer fulltime…(yet)\nI’m sure I made some errors and some mistakes. Feel free to correct me and I will update the article.</p>\n<h3>Links</h3>\n<h4><a href=\"https://github.com/ParamagicDev/config-files/tree/master/scripts\">My config-files repo with postgres scripts</a></h4>\n<p><a href=\"https://www.postgresql.org/\">PostgresQL Homepage</a>\n<a href=\"https://github.com/docker-library/postgres/blob/4a82eb932030788572b637c8e138abb94401640c/12/Dockerfile\">PostgresQL Dockerfile</a></p>\n<p><a href=\"https://enterprise.arcgis.com/en/server/10.3/cloud/amazon/change-default-database-passwords-on-linux.htm\">Where I found the sed scripts</a></p>\n<p><a href=\"https://stackoverflow.com/questions/4494336/how-do-you-store-a-list-of-directories-into-an-array-in-bash-and-then-print-the\">How I figured out how to put multiple directories into a bash array</a></p>","frontmatter":{"title":"PostgresQL - Setting up postgres on a local environment","date":"November 24, 2019","description":"I will detail a short and easy way to get PostgresQL running on a Ubuntu based machine for local development."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/misc/postgresql-password-reset/","previous":{"fields":{"slug":"/learning-php/part8/"},"frontmatter":{"title":"PHP for Beginners - Part 8 - What the heck is PDO?"}},"next":{"fields":{"slug":"/making-ems-helper/introduction/"},"frontmatter":{"title":"Making EMS Helper - Introduction"}}}}}