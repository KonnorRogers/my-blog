{"componentChunkName":"component---src-templates-blog-post-js","path":"/bridgetownrb/creating-plugins-with-bridgetown/","result":{"data":{"site":{"siteMetadata":{"title":"Konnor's Blog","author":"Konnor Rogers"}},"mdx":{"id":"b9a2a400-c0e1-534f-a0bf-cc00a98d1ead","excerpt":"Purpose I want to to detail my process of creating a plugin with\n Bridgetown . The official guides probably explain way better than me. This is more of\naâ€¦","frontmatter":{"title":"Creating a plugin with Bridgetown","date":"May 30, 2020"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating a plugin with Bridgetown\",\n  \"date\": \"2020-05-30T10:27:31\",\n  \"description\": \"I will go over how to create a Gem for use with Bridgetown.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Purpose\"), mdx(\"p\", null, \"I want to to detail my process of creating a plugin with\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bridgetownrb.com\"\n  }), \"Bridgetown\"), \".\"), mdx(\"p\", null, \"The official guides probably explain way better than me. This is more of\\na personal reference documenting my process.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.bridgetownrb.com/docs/plugins\"\n  }), \"Link to official guides\")), mdx(\"h2\", null, \"What plugin will we be building?\"), mdx(\"p\", null, \"The plan for this guide is to create a\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tailwindcss.com/\"\n  }), \"TailwindCSS\"), \" plugin for anyone to\\nadd tailwind with ease.\"), mdx(\"h2\", null, \"Pulling down sample repository\"), mdx(\"p\", null, \"First step is to pull down the sample plugin repository\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/bridgetownrb/bridgetown-sample-plugin\"\n  }), \"Sample Plugin\\nRepository\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git clone https://github.com/bridgetownrb/bridgetown-sample-plugin\\nmv bridgetown-sample-plugin my-plugin\\ncd my-plugin\\nbundle install\\nrm -rf .git\\ngit init\\ngit add -A\\ngit commit -m \\\"Plugin initial structure\\\"\\n\")), mdx(\"h2\", null, \"Digging through\"), mdx(\"p\", null, \"First step is to check out the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bridgetown-sample-plugin.spec\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"file=bridgetown-sample-plugin.spec\",\n    \"file\": \"bridgetown-sample-plugin.spec\"\n  }), \"\\n# ...\\nGem::Specification.new do |spec|\\n# ...\\n-  spec.name          = \\\"bridgetown-sample-plugin\\\"\\n+  spec.name          = \\\"bridgetown-plugin-tailwindcss\\\"\\n\\n-  spec.version       = SamplePlugin::VERSION\\n+  spec.version       = TailwindCss::VERSION\\n\\n-  spec.author        = \\\"Bridgetown Team\\\"\\n+  spec.author        = \\\"Konnor Rogers\\\"\\n\\n-  spec.email         = \\\"maintainers@bridgetownrb.com\\\"\\n+  spec.email         = \\\"konnor7414@gmail.com\\\"\\n\\n-  spec.summary       = \\\"Sample code for creating new Bridgetown plugins\\\"\\n+  spec.summary       = \\\"A plugin for adding tailwindcss to bridgetown\\\"\\n\\n-  spec.homepage      = \\\"https://github.com/bridgetownrb/bridgetown-sample-plugin\\\"\\n+  spec.homepage      = \\\"https://github.com/ParamagicDev/bridgetown-plugin-tailwindcss\\\"\\n# ...\\nend\\n# ...\\n\")), mdx(\"p\", null, \"So you\\u2019ll notice above a few changes. We had to rename\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SamplePlugin::VERSION\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TailwindCss::VERSION\"), \". There requires a lot\\nof renaming to get this to work. I created a Rake task for this problem.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"file=package.json\",\n    \"file\": \"package.json\"\n  }), \"  {\\n    \\\"repository\\\": {\\n      \\\"type\\\": \\\"git\\\",\\n\\n-     \\\"url\\\": \\\"https://github.com/bridgetownrb/bridgetown-sample-plugin.git\\\"\\n+     \\\"url\\\":\\n\\\"https://github.com/paramagicdev/bridgetown-plugin-tailwindcss.git\\\"\\n    },\\n\\n-    \\\"author\\\": \\\"Bridgetown Maintainers <maintainers@bridgetownrb.com>\\\",\\n+    \\\"author\\\": \\\"Konnor Rogers <konnor7414@gmail.com>\\\",\\n    \\\"homepage\\\": \\\"https://www.bridgetownrb.com\\\",\\n  }\\n\")), mdx(\"p\", null, \"Feel free to use it:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ruby\",\n    \"metastring\": \"file=Rakefile\",\n    \"file\": \"Rakefile\"\n  }), \"# frozen_string_literal: true\\n\\nrequire \\\"bundler/gem_tasks\\\"\\nrequire \\\"rspec/core/rake_task\\\"\\n\\nRSpec::Core::RakeTask.new(:spec)\\n\\ntask :default => :spec\\ntask :test => :spec\\n\\ndef filelist(*strings)\\n  Rake::FileList.new(strings) do |fl|\\n    fl.exclude(/node_modules/)\\n    fl.exclude(/Rakefile/)\\n    fl.exclude(/\\\\.md/)\\n    fl.exclude(/\\\\.txt/)\\n    fl.exclude(/tags/)\\n  end\\nend\\n\\ndef file_rename(file, regex, string)\\n  return nil unless file =~ regex\\n\\n  new_file = file.gsub(regex, string)\\n  Rake.mkdir_p(File.dirname(new_file))\\n  Rake.mv(file, new_file)\\nend\\n\\nPLUGIN_NAME = \\\"bridgetown-plugin-tailwindcss\\\"\\nUNDERSCORE_PLUGIN_NAME = PLUGIN_NAME.gsub(/-/, \\\"_\\\")\\nMODULE_NAME = \\\"TailwindCss\\\"\\n\\nSAMPLE_PLUGIN = /sample-plugin/\\nUNDERSCORE_SAMPLE_PLUGIN = /sample_plugin/\\nBRIDGETOWN_SAMPLE_PLUGIN = /bridgetown-sample-plugin/\\nSAMPLE_PLUGIN_MODULE = /SamplePlugin/\\n\\nALL_REGEX_ARY = [\\n  SAMPLE_PLUGIN,\\n  UNDERSCORE_SAMPLE_PLUGIN,\\n  BRIDGETOWN_SAMPLE_PLUGIN,\\n  SAMPLE_PLUGIN_MODULE\\n]\\n\\n# Reverse it so files come first, then directories\\nALL_FILES = filelist(\\\"**/*\\\").reverse\\n\\n# https://avdi.codes/rake-part-2-file-lists/\\nnamespace :plugin do\\n  desc \\\"Renames and rewrites files\\\"\\n  task rename: [:rewrite_files, :rename_files] do\\n  end\\n\\n  desc \\\"Renames the plugin\\\"\\n  task :rename_files do\\n    ALL_FILES.map do |file|\\n      file_rename(file, BRIDGETOWN_SAMPLE_PLUGIN, PLUGIN_NAME)\\n      file_rename(file, SAMPLE_PLUGIN, PLUGIN_NAME)\\n      file_rename(file, UNDERSCORE_SAMPLE_PLUGIN, UNDERSCORE_PLUGIN_NAME)\\n    end\\n  end\\n\\n  desc \\\"Renames the plugin inside of files\\\"\\n  task :rewrite_files do\\n    ALL_FILES.each do |file|\\n      next if File.directory?(file)\\n\\n      # Fixes an issue with non-unicode characters\\n      text = File.read(file).encode(\\\"UTF-8\\\", invalid: :replace, replace: \\\"?\\\")\\n\\n      # Go to next iteration, unless it contains the regex\\n      next unless ALL_REGEX_ARY.any? { |regex| text =~ regex }\\n\\n      # Check for /bridgetown-sample-plugin/ first, if that doesnt\\n      # exist, then check for regular /sample-plugin/\\n      replacement_text = text.gsub(SAMPLE_PLUGIN_MODULE, MODULE_NAME)\\n      replacement_text = replacement_text.gsub(BRIDGETOWN_SAMPLE_PLUGIN, PLUGIN_NAME)\\n      replacement_text = replacement_text.gsub(SAMPLE_PLUGIN, PLUGIN_NAME)\\n      replacement_text = replacement_text.gsub(UNDERSCORE_SAMPLE_PLUGIN,\\n                                               UNDERSCORE_PLUGIN_NAME)\\n      File.open(file, \\\"w\\\") { |file| file.puts replacement_text }\\n    end\\n  end\\nend\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gist.github.com/ParamagicDev/cd7bede36e3c19f2580ff1b5300fc2d1\"\n  }), \"Check out the Gist here\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/bridgetownrb/creating-plugins-with-bridgetown/","previous":{"id":"b1bbf065-9d07-5c7f-bb4b-b9b4adbe514c","fields":{"slug":"/bridgetownrb/building-with-bridgetown/"},"frontmatter":{"title":"Building with Bridgetown - Portfolio"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Building with Bridgetown - Portfolio\",\n  \"date\": \"2020-05-24T09:54:47\",\n  \"description\": \"In this post, I will be detailing how I built my portfolio site with Bridgetown along with TailwindCSS.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    id: \"foreword\"\n  }, mdx(\"a\", {\n    href: \"#foreword\"\n  }, \"Prerequisites\")), mdx(\"p\", null, \"This will be the actual building portion of creating a site with\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bridgetownrb.com\"\n  }), \"Bridgetown\")), mdx(\"p\", null, \"To go back and see how the project is setup, check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"bridgetownrb/dockerizing-bridgetown/\"\n  }), \"Dockerizing\\nBridgetown\")), mdx(\"p\", null, \"Alternatively, to follow along you could simply do the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"gem install bridgetown -v '0.15.0.beta3'\\nbridgetown new <mysite> --apply=\\\"https://github.com/paramagicdev/bridgetown-plugin-tailwindcss\\\"\\n\")), mdx(\"p\", null, \"And now you\\u2019re completely caught up! Lets get building!\"), mdx(\"h2\", {\n    id: \"site-data\"\n  }, mdx(\"a\", {\n    href: \"#site-data\"\n  }, \"Setting Site Data\")), mdx(\"p\", null, \"The first thing we want to do is setup some static data for us to pull\\nin.\"), mdx(\"p\", null, \"For example, we want our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"first_name\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"last_name\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"github_profile\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"linkedin_profile\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"portfolio_site\"), \" and whatever else you can think of\\nto be easily pulled down and easily changed should something change in\\nthe future.\"), mdx(\"p\", null, \"So where do we go to set site data?\"), mdx(\"p\", null, \"According to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.bridgetownrb.com/docs/datafiles\"\n  }), \"Bridgetown\\nDocs\"), \" you set up your\\nstatic data inside of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./_data/\"), \" directory. You can use one \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"YAML\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JSON\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CSV\"), \" files. I prefer \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"YAML\"), \" myself.\"), mdx(\"p\", null, \"So lets add the data. Navigate to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_data/site_metadata.yml\"), \" file.\\nFor me, I filled in the following information:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\",\n    \"metastring\": \"title=_data/site_metadata.yml\",\n    \"title\": \"_data/site_metadata.yml\"\n  }), \"title: Konnor's Portfolio\\nemail: konnor7414@gmail.com\\ndescription: >-\\n  # this means to ignore newlines and clip the final new line\\n  This is Konnor's portfolio site. It contains info about who he is, what\\n  projects he is working on / has worked on, as well as contact information.\\n\\nfirst_name: Konnor\\nlast_name: Rogers\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"@todo\"\n  }), \"Reference File on Github\")), mdx(\"p\", null, \"Now, lets create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_data/projects.yml\"), \" file. Here, we can do things\\nlike add links, descriptions, etc for each project that we plan on\\nputting in. Heres what my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_data/projects.yml\"), \" file looks like.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\",\n    \"metastring\": \"title=_data/projects.yml\",\n    \"title\": \"_data/projects.yml\"\n  }), \"ma_protocol_rewrite:\\n  source_code: https://github.com/ParamagicDev/ma-protocol-rewrite/tree/master\\n  deployed_app: https://inspiring-varahamihira-efb922.netlify.app/\\n  description: >-\\n    A rewrite of EMS protocols for the state of Massachusetts. The app\\n    is written in React / Gatsby and attempts to created a more\\n    navigable and searchable interface for reading the protocols. This is the\\n    current project im working on.\\n\\n# Below projects omitted for brevity\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"@todo\"\n  }), \"Reference File on Github\")), mdx(\"p\", null, \"Finally, lets add some links for people to find us:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\",\n    \"metastring\": \"title=_data/links.yml\",\n    \"title\": \"_data/links.yml\"\n  }), \"blog: https://blog.konnor.site\\nlinkedin: https://www.linkedin.com/in/konnor-rogers-78b120175/\\ngithub: https://github.com/ParamagicDev\\n\")), mdx(\"p\", null, \"So now, in various pages we can access our data via a simple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=ExamplePage\",\n    \"title\": \"ExamplePage\"\n  }), \"{{ site.links.github }} # => https://github.com/ParamagicDev\\n\\n{{ site.projects.ma_protocol_rewrite[:source_code] }} # => https://github.com/ParamagicDev/ma-protocol-rewrite/tree/master\\n\\n{{ site.site_metadata.first_name }} # => Konnor\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":null}}}